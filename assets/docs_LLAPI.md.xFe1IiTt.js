import{_ as s,c as i,o as a,V as l}from"./chunks/framework.LLn18gvy.js";const u=JSON.parse('{"title":"LLAPI用法","description":"","frontmatter":{},"headers":[],"relativePath":"docs/LLAPI.md","filePath":"docs/LLAPI.md","lastUpdated":1705741322000}'),t={name:"docs/LLAPI.md"},n=l('<h1 id="llapi用法" tabindex="-1">LLAPI用法 <a class="header-anchor" href="#llapi用法" aria-label="Permalink to &quot;LLAPI用法&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">注意</p><p><strong>实验性</strong>和<strong>未完成</strong>的API可能会发生变动导致不可用</p></div><h2 id="func-llapi-on-new-messages-callback" tabindex="-1"><strong>func</strong> <code>LLAPI.on(&quot;new-messages&quot;, callback)</code> <a class="header-anchor" href="#func-llapi-on-new-messages-callback" aria-label="Permalink to &quot;__func__ `LLAPI.on(&quot;new-messages&quot;, callback)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>监听新消息</p></li><li><p><strong>参数</strong></p><ul><li>callback: 实例函数</li></ul></li><li><p><strong>返回</strong></p><ul><li>message(MessageElement): 消息elements对象</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;new-messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li></ul><h2 id="func-llapi-on-dom-up-messages-callback" tabindex="-1"><strong>func</strong> <code>LLAPI.on(&quot;dom-up-messages&quot;, callback)</code> <a class="header-anchor" href="#func-llapi-on-dom-up-messages-callback" aria-label="Permalink to &quot;__func__ `LLAPI.on(&quot;dom-up-messages&quot;, callback)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>监听聊天界面消息更新</p></li><li><p><strong>参数</strong></p><ul><li>callback: 实例函数</li></ul></li><li><p><strong>返回</strong></p><ul><li>node: 消息node对象</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dom-up-messages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(node);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li></ul><h2 id="func-llapi-on-context-msg-menu-callback" tabindex="-1"><strong>func</strong> <code>LLAPI.on(&quot;context-msg-menu&quot;, callback)</code> <a class="header-anchor" href="#func-llapi-on-context-msg-menu-callback" aria-label="Permalink to &quot;__func__ `LLAPI.on(&quot;context-msg-menu&quot;, callback)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>监听QQ消息菜单打开事件</p></li><li><p><strong>参数</strong></p><ul><li>callback: 实例函数</li></ul></li><li><p><strong>返回</strong></p><ul><li>event: 右键事件</li><li>target: 右键位置的消息document</li><li>msgIds: 消息ID</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;context-msg-menu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msgIds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(event, target, msgIds);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li></ul><h2 id="func-llapi-add-editor-message" tabindex="-1"><strong>func</strong> <code>LLAPI.add_editor(message)</code> <a class="header-anchor" href="#func-llapi-add-editor-message" aria-label="Permalink to &quot;__func__ `LLAPI.add_editor(message)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>添加消息编辑栏的内容(未完成)</p></li><li><p><strong>参数</strong></p><ul><li>message:</li></ul></li><li><p><strong>返回</strong></p><ul><li></li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span></code></pre></div></li></ul><h2 id="func-llapi-set-editor-message" tabindex="-1"><strong>func</strong> <code>LLAPI.set_editor(message)</code> <a class="header-anchor" href="#func-llapi-set-editor-message" aria-label="Permalink to &quot;__func__ `LLAPI.set_editor(message)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>设置消息编辑栏的内容</p></li><li><p><strong>参数</strong></p><ul><li>message(string|HTMLElement): 消息内容</li></ul></li><li><p><strong>返回</strong></p><ul><li>(bool): 是否执行成功</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_editor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><h2 id="func-llapi-del-editor-type-space-false" tabindex="-1"><strong>func</strong> <code>LLAPI.del_editor(type, space=false)</code> <a class="header-anchor" href="#func-llapi-del-editor-type-space-false" aria-label="Permalink to &quot;__func__ `LLAPI.del_editor(type, space=false)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>删除消息编辑栏的指定类型内容(实验性)</p></li><li><p><strong>参数</strong></p><ul><li>type(string): 消息类型</li><li>space(boolean): 是否删除空格</li></ul></li><li><p><strong>返回</strong></p><ul><li>(bool): 是否执行成功</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">del_editor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;msg-at&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><h2 id="func-llapi-add-message-list-peer-message" tabindex="-1"><strong>func</strong> <code>LLAPI.add_message_list(peer, message)</code> <a class="header-anchor" href="#func-llapi-add-message-list-peer-message" aria-label="Permalink to &quot;__func__ `LLAPI.add_message_list(peer, message)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>添加聊天消息(不保存)(未完成)</p></li><li><p><strong>参数</strong></p><ul><li>peer(Peer): 用户ID对象</li><li>message(string|HTMLElement): 消息内容</li></ul></li><li><p><strong>返回</strong></p><ul><li>(bool): 是否执行成功</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span></code></pre></div></li></ul><h2 id="func-llapi-add-qmenu-callback" tabindex="-1"><strong>func</strong> <code>LLAPI.add_qmenu(callback)</code> <a class="header-anchor" href="#func-llapi-add-qmenu-callback" aria-label="Permalink to &quot;__func__ `LLAPI.add_qmenu(callback)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>添加聊天消息(不保存)(未完成)</p></li><li><p><strong>参数</strong></p><ul><li>callback(func): 菜单添加函数</li></ul></li><li><p><strong>返回</strong></p><ul><li>qContextMenu(element): 菜单节点</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addqmenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">qContextMenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    qContextMenu.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertAdjacentHTML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;beforeend&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, separatorHTML)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    qContextMenu.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertAdjacentHTML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;beforeend&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, repeatmsgHTML)</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add_qmenu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(addqmenu)</span></span></code></pre></div></li></ul><h2 id="func-llapi-getaccountinfo" tabindex="-1"><strong>func</strong> <code>LLAPI.getAccountInfo()</code> <a class="header-anchor" href="#func-llapi-getaccountinfo" aria-label="Permalink to &quot;__func__ `LLAPI.getAccountInfo()`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>获取当前用户信息</p></li><li><p><strong>参数</strong></p><ul><li>uid(number): QQ号</li></ul></li><li><p><strong>返回</strong></p><ul><li>AccountInfo: <ul><li>uid(number): uid</li><li>uin(number): uin</li></ul></li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAccountInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li></ul><h2 id="func-llapi-getuserinfo-uid" tabindex="-1"><strong>func</strong> <code>LLAPI.getUserInfo(uid)</code> <a class="header-anchor" href="#func-llapi-getuserinfo-uid" aria-label="Permalink to &quot;__func__ `LLAPI.getUserInfo(uid)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>获取当前用户的详细信息</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>UserInfo: <ul><li>nickName(number): 名称</li><li>age(number): 年龄</li><li>...</li></ul></li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUserInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">114514</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><h2 id="func-llapi-getpeer" tabindex="-1"><strong>func</strong> <code>LLAPI.getPeer()</code> <a class="header-anchor" href="#func-llapi-getpeer" aria-label="Permalink to &quot;__func__ `LLAPI.getPeer()`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>获取当前聊天窗口的Peer</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>peer(Peer): 用户ID信息</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPeer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div></li></ul><h2 id="func-llapi-sendmessage-peer-elements" tabindex="-1"><strong>func</strong> <code>LLAPI.sendMessage(peer, elements)</code> <a class="header-anchor" href="#func-llapi-sendmessage-peer-elements" aria-label="Permalink to &quot;__func__ `LLAPI.sendMessage(peer, elements)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>发送消息</p></li><li><p><strong>参数</strong></p><ul><li>peer(Peer): 用户ID对象</li><li>message(MessageElement): 消息内容</li></ul></li><li><p><strong>返回</strong></p><p>empty</p></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> elements</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        content: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;一条消息&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        file: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FILE_PATH&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(peer, elements)</span></span></code></pre></div></li></ul><h2 id="func-llapi-forwardmessage-srcpeer-dstpeer-msgids" tabindex="-1"><strong>func</strong> <code>LLAPI.forwardMessage(srcpeer, dstpeer, msgIds)</code> <a class="header-anchor" href="#func-llapi-forwardmessage-srcpeer-dstpeer-msgids" aria-label="Permalink to &quot;__func__ `LLAPI.forwardMessage(srcpeer, dstpeer, msgIds)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>转发消息</p></li><li><p><strong>参数</strong></p><ul><li>srcpeer(Peer): 消息发送对象ID</li><li>dstpeer(Peer): 转发对象ID</li><li>msgIds(list): 消息ID的列表</li></ul></li><li><p><strong>返回</strong></p><p>empty</p></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> peer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPeer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(peer, peer, [msgId])</span></span></code></pre></div></li></ul><h2 id="func-llapi-getfriendslist-forced" tabindex="-1"><strong>func</strong> <code>LLAPI.getFriendsList(forced)</code> <a class="header-anchor" href="#func-llapi-getfriendslist-forced" aria-label="Permalink to &quot;__func__ `LLAPI.getFriendsList(forced)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>获取好友列表</p></li><li><p><strong>参数</strong></p><ul><li>forced(bool): 是否强制更新</li></ul></li><li><p><strong>返回</strong></p><ul><li>(list): 好友列表</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFriendsList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><h2 id="func-llapi-getgroupslist-forced" tabindex="-1"><strong>func</strong> <code>LLAPI.getGroupsList(forced)</code> <a class="header-anchor" href="#func-llapi-getgroupslist-forced" aria-label="Permalink to &quot;__func__ `LLAPI.getGroupsList(forced)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>获取群组列表</p></li><li><p><strong>参数</strong></p><ul><li>forced(bool): 是否强制更新</li></ul></li><li><p><strong>返回</strong></p><ul><li>(list): 群组列表</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getGroupsList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul><h2 id="func-llapi-getpreviousmessages-peer-count-20-startmsgid-0" tabindex="-1"><strong>func</strong> <code>LLAPI.getPreviousMessages(peer, count = 20, startMsgId = &quot;0&quot;)</code> <a class="header-anchor" href="#func-llapi-getpreviousmessages-peer-count-20-startmsgid-0" aria-label="Permalink to &quot;__func__ `LLAPI.getPreviousMessages(peer, count = 20, startMsgId = &quot;0&quot;)`&quot;">​</a></h2><ul><li><p><strong>说明</strong></p><p>获取历史聊天记录</p></li><li><p><strong>参数</strong></p><ul><li>peer(number): 是否强制更新</li><li>count(number): 数量</li><li>startMsgId(string): 起始消息ID</li></ul></li><li><p><strong>返回</strong></p><ul><li>(MessageElement): 消息列表</li></ul></li><li><p><strong>用法</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> peer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPeer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LLAPI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPreviousMessages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(peer, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li></ul>',34),e=[n];function p(h,r,k,o,g,d){return a(),i("div",null,e)}const E=s(t,[["render",p]]);export{u as __pageData,E as default};
